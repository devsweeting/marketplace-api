name: 'Develop'
on:
  push:
    branches:
      - develop

  pull_request:
    branches:
      - develop

jobs:
  main:
    name: 'Test & Deploy'
    runs-on: ubuntu-latest
    container: node:14
    services:
      httpstatus:
        image: ghcr.io/lucky/httpstatus:latest
        ports:
          - 3999/tcp
      localstack:
        image: localstack/localstack:latest
        env:
          AWS_DEFAULT_REGION: us-west-2
          EDGE_PORT: 4566
          SERVICES: s3
        ports: ["4566:4566"]
      postgres:
        image: postgres
        env:
          POSTGRES_PORT: 5432
          POSTGRES_DB: 'test'
          POSTGRES_USERNAME: 'postgres'
          POSTGRES_PASSWORD: 'password'
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      ######################################
      # Build, Install and Test
      ######################################
      - name: 'Checkout source code'
        uses: actions/checkout@v2

      - name: 'Setup NodeJS 14'
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: 'Install Dependencies'
        run: yarn install

      - name: 'Build'
        run: yarn build

      - name: 'Bundle'
        run: yarn bundle

      - name: 'Fixtures'
        run: yarn fixtures
        env:
          TYPEORM_PORT: ${{ job.services.postgres.ports['5432'] }}

      - name: 'Run Tests'
        run: yarn test
        env:
          NODE_ENV: test

      ######################################
      # Deploy to Elastic Beanstalk
      ######################################
      - name: 'Generate Deployment Package'
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        run: zip -r deploy.zip . -x '*.git*'

      - name: 'Generate API Version Label'
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        run: echo VERSION_LABEL=build-develop-$(date +%s) >> $GITHUB_ENV

      - name: 'Generate Admin Version Label'
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        run: echo VERSION_LABEL_ADMIN=build-develop-admin-$(date +%s) >> $GITHUB_ENV

      - name: 'Deploy API to Elastic Beanstalk'
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: 'Jump'
          environment_name: ${{ secrets.AWS_ENVIORNMENT_NAME_STAGING }}
          version_label: ${{ env.VERSION_LABEL }}
          version_description: ${{ env.VERSION_LABEL }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip

      - name: 'Deploy Admin to Elastic Beanstalk'
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: 'Jump'
          environment_name: ${{ secrets.AWS_ENVIORNMENT_NAME_STAGING_ADMIN }}
          version_label: ${{ env.VERSION_LABEL_ADMIN }}
          version_description: ${{ env.VERSION_LABEL_ADMIN }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: deploy.zip
